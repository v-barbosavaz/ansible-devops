---
# tasks file for mongo
- name: Install policycoreutils-python
  yum:
    name: policycoreutils-python
    state: present

- name: Add mongo yum repository
  yum_repository:
    name: mongodb-org-{{ mongo_version }}
    description: MongoDB Repository
    baseurl: https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/{{ mongo_version }}/$basearch/
    gpgcheck: no
  tags: [ yum ]
  when: local_artifact is undefined

- name: Install mongo via yum
  yum:
    name: mongodb-org
    state: latest
  tags: [ yum ]
  when: local_artifact is undefined
  register: mongo_install_result

- name: Install mongo from local packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ mongo_server_rpm_name }}"
    - "{{ mongo_shell_rpm_name }}"
    - "{{ mongo_tools_rpm_name }}"
  tags: [ yum ]
  when: local_artifact is defined
  register: mongo_install_result

- name: Ensure DB directory exists
  file:
    path: "{{ mongo_db_dir }}"
    state: directory
    owner: "{{ mongo_user }}"
    group: "{{ mongo_user }}"
    mode: 0755
  tags: [ dep ]

- name: Ensure SELinux context on data directory
  command: chcon -R -u system_u -t mongod_var_lib_t {{ mongo_db_dir }}
  when: selinux_enabled | default(true)
  register: mongo_chcon
  changed_when: mongo_chcon.rc != 0
  tags: selinux

- name: Ensure SELinux access to mongo port
  seport:
    ports: "{{ mongo_port }}"
    proto: tcp
    setype: mongod_port_t
    state: present
  when: selinux_enabled | default(true)
  tags: selinux

- name: Copy system configs
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { src: 99-mongodb-nproc.conf.j2, dest: /etc/security/limits.d/99-mongodb-nproc.conf }
  tags: [ install, config ]

- name: Copy mongo config
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ mongo_user }}"
    group: "{{ mongo_user }}"
    mode: 0640
  with_items:
    - { src: mongod.conf.j2, dest: "{{ mongo_conf_file }}" }
  register: mongo_config_result
  tags: [ install, config ]

- name: Determine mongod service state
  set_fact:
    mongod_state: "{{ (mongo_install_result.changed or mongo_config_result.changed) | ternary('restarted','started') }}"

- name: Reload systemctl daemon
  command: systemctl daemon-reload
  when: mongo_install_result.changed

- name: Ensure mongod service is {{ mongod_state }}
  service:
    name: mongod
    state: "{{ mongod_state }}"
    enabled: yes

- include_tasks: replica_set.yml
  when: mongo_init_replica_set | default(false)
